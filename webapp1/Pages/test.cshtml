@page
@model webapp1.Pages.testModel
@{
    ViewData["Title"] = "Questions";
}

<div style="padding-top: 30px; padding-left: 30px;">
    <a href="/main" style="display: inline-block; background-color: #ffffffcc; padding: 8px 12px; border-radius: 6px; color: #007bff; text-decoration: none; font-weight: bold; box-shadow: 0 0 5px rgba(0,0,0,0.1); transition: background-color 0.2s ease;"
       onmouseover="this.style.backgroundColor='#e0f0ff'" onmouseout="this.style.backgroundColor='#ffffffcc'">
        ← Back to Info Page
    </a>
</div>

<div style="padding: 100px;">
    <h1>BÀI KIỂM TRA HỖ TRỢ XÁC ĐỊNH SỞ THÍCH VÀ GỢI Ý LỰA CHỌN NHÓM MÔN HỌC CHO HỌC SINH LỚP 10</h1>
    <p>Lựa chọn một trong 5 lựa chọn cho mỗi câu hỏi</p>

    <form id="quizForm">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <div style="margin-bottom: 16px;">
                <p style="margin-bottom: 8px;"><strong>@(i + 1). @Model.Questions[i].Content</strong></p>
                <div style="display: flex; justify-content: space-between; gap: 5px;">
                    @for (int j = 1; j <= 5; j++)
                    {
                        <label style="flex: 1; display: flex; align-items: center; justify-content: center; gap: 5px;">
                            <input type="radio" name="rating_@i" value="@j" required />
                            @{
                                var label = j switch
                                {
                                    1 => "Hoàn toàn không đồng ý",
                                    2 => "Không hoàn toàn đồng ý",
                                    3 => "Bình thường",
                                    4 => "Đồng ý một phần",
                                    5 => "Hoàn toàn đồng ý",
                                    _ => "Option"
                                };
                            }
                            @label
                        </label>
                    }
                </div>
            </div>
        }

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary">Gửi bài làm</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.getElementById("quizForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const jwt = sessionStorage.getItem("jwt");
            const refreshToken = sessionStorage.getItem("refreshToken");

            if (!jwt || !refreshToken) {
                alert("Vui lòng đăng nhập lại.");
                window.location.href = "/Login";
                return;
            }

            const ratings = [];
            const total = @Model.Questions.Count;

            for (let i = 0; i < total; i++) {
                const val = document.querySelector(`input[name='rating_${i}']:checked`);
                if (!val) {
                    alert(`Vui lòng chọn đáp án cho câu ${i + 1}`);
                    return;
                }
                ratings.push(parseInt(val.value));
            }

            const payload = {
                date: new Date().toISOString(),
                content: "Bài làm từ trang kiểm tra",
                ratings: ratings
            };

            try {
                const res = await fetch("@Model.ApiBaseUrl/api/transcripts", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": "Bearer " + jwt
                    },
                    body: JSON.stringify(payload)
                });

                if (res.ok) {
                    alert("✅ Gửi bài làm thành công!");
                    window.location.href = "/Main";
                } else {
                    const body = await res.text();
                    alert("❌ Gửi thất bại: " + body);
                }
            } catch (err) {
                console.error("Error:", err);
                alert("Lỗi kết nối đến máy chủ.");
            }
        });
    </script>
}
